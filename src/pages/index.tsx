import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import {Button, Link} from "@nextui-org/react";
import Nav from "~/components/Navbar/navbar";
import { api } from "~/utils/api";
import Wordchanger from "~/components/Wordchanger/wordchanger";
import NextLink from "next/link";
import { button as buttonStyles } from "@nextui-org/theme";

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />
      <section className="flex flex-col items-center justify-center gap-4 py-8 md:py-10">
      <div className="inline-block max-w-lg text-center justify-center">
        <span className="text-6xl font-bold">
          Find&nbsp;
        </span>
        <Wordchanger />
        <span className="text-6xl font-bold">creators for your next shoot.</span>
        <h2 className="font-bold text-1xl">Explore hundreds of videographers, editors, content creators, film. </h2>
      </div>

      <div className="flex gap-3">
        <Link 
          as={NextLink}
          href="/"
          className={buttonStyles({
            color: "danger",
            radius: "full",
            variant: "shadow",
          })}
        >
          Find a job
        </Link>
        <Link
           as={NextLink}
           href="/"
           className={buttonStyles({
             color: "primary",
             radius: "full",
             variant: "shadow",
           })}
        >
          Post a job
        </Link>
        
      </div>
        <div className="flex flex-col items-center justify-center gap-4 py-8 md:py-10">
          <AuthShowcase />
        </div>
      </section>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <Button
        variant="flat"
        color="warning"
        className=" px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </Button>
    </div>
  );
}
